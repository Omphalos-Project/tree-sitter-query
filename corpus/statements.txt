===========
Named nodes
===========

(program)

---

(program
  (named_node
    name: (identifier)))

===============
Anonymous nodes
===============

(program)
"it"

---

(program
  (named_node
    name: (identifier))
  (anonymous_node))

===============
Field names
===============

(program
  name: (identifier))

---

(program
  (named_node
    name: (identifier)
    (field_definition
      name: (identifier)
      (named_node
        name: (identifier)))))

===============
Quantifiers (+)
===============

(program
  (identifier)+)

---

(program
  (named_node
    name: (identifier)
    (named_node
      name: (identifier)
      quantifier: (quantifier))))

===============
Quantifiers (?)
===============

(program
  (identifier)?)

---

(program
  (named_node
    name: (identifier)
    (named_node
      name: (identifier)
      quantifier: (quantifier))))

===============
Quantifiers (*)
===============

(program
  (identifier)*)

---

(program
  (named_node
    name: (identifier)
    (named_node
      name: (identifier)
      quantifier: (quantifier))))

======
Groups
======

(
  (comment)
  (function_declaration)
)

---

(program
  (grouping
    (named_node name: (identifier))
    (named_node name: (identifier))))

========
Captures
========

(class_declaration
  body: (class_body) @class.body @test) @blorg

---

(program
  (named_node name: (identifier)
    (field_definition name: (identifier)
      (named_node
        name: (identifier)
        (capture name: (capture_identifier))
        (capture name: (capture_identifier))))
    (capture name: (capture_identifier))))

=====
Lists
=====

[
  "?"
  "+"
  "-"
] @ops

---

(program
  (list
    (anonymous_node)
    (anonymous_node)
    (anonymous_node)
    (capture name: (capture_identifier))))

==========
Predicates
==========

(
  (identifier) @v
  (eq? @v "test")
)

---

(program
  (grouping
    (named_node
      name: (identifier)
      (capture name: (capture_identifier)))
    (predicate
      name: (identifier)
      type: (predicate_type)
      parameters: (parameters
        (capture name: (capture_identifier))
        (string)))))
